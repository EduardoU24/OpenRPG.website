import { GetStaticPaths, GetStaticProps } from "next";
import Image from "next/image";
import Layout from "@/components/layout";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faChevronLeft } from "@fortawesome/free-solid-svg-icons";
import ReactMarkdown from "react-markdown";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import Link from "next/link";

export interface IssueData {
  id: string;
  title: string;
  priority: string;
  priority_icon: string;
  last_updated: string;
  status: string;
  description: string;
}

function RoadmapDetailsPage() {
  const router = useRouter();
  const { id } = router.query;
  const [issue, setIssueData] = useState<IssueData>();

  useEffect(() => {
    const fetchIssueData = async () => {
      const res = await fetch(`/api/roadmap/${id}`);
      const data = await res.json();
      console.log(data);
      setIssueData(data);
    };
    fetchIssueData();
  }, [id]);

  if (!issue) {
    return (
      <Layout>
        <div>Loading...</div>
      </Layout>
    );
  }

  console.log(issue);
  const emSizeInPixels = parseFloat(
    getComputedStyle(document.documentElement).fontSize,
  );

  return (
    <Layout>
      <Link key="Roadmap" href={`/roadmap/`}>
        <div className="flex cursor-pointer items-center gap-2">
          <FontAwesomeIcon
            icon={faChevronLeft}
            size="lg"
            className="h-5 w-5 text-gray-200"
          />
          <h2 className="text-lg font-semibold">Roadmap</h2>
        </div>
      </Link>
      <div className="mt-4 flex w-8/12 flex-col gap-4">
        <div className="rounded-md border border-zinc-900 bg-zinc-900/90 p-4 shadow-xl">
          <div className="flex items-center gap-4">
            <div>
              <h3 className="font-semibold">
                <Image
                  className=" inline-block"
                  src={issue.priority_icon}
                  alt={issue.priority}
                  width={`${1 * emSizeInPixels}`}
                  height={`${1 * emSizeInPixels}`}
                />{" "}
                | {issue.title}
              </h3>
            </div>
          </div>
          <div className="mt-4">
            <p className="text-zinc-200">
              Last Updated: {issue.last_updated}
              <br />
              Status: {issue.status}
            </p>
          </div>
          {issue.description && (
            <div className="mt-4">
              <h4 className="font-semibold">Description</h4>
              <ReactMarkdown className="markdown-body">{issue.description}</ReactMarkdown>
            </div>
          )}
        </div>
        <div className="w-full rounded-sm bg-zinc-900/90 p-5 text-center text-sm shadow-xl">
          This page was automatically generated by the live data on Jira (the
          project management system).
          <br />
          Some styles or design might be broken.
        </div>
      </div>
    </Layout>
  );
}

export default RoadmapDetailsPage;
